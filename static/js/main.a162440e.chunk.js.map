{"version":3,"sources":["OrdererCard.jsx","OrderersForm.jsx","util.js","ReceiptForm.jsx","OutputTable.jsx","App.js","index.js"],"names":["OrdererCard","props","styles","backgroundColor","borderRadius","color","fontSize","padding","margin","display","alignItems","style","UserOutlined","marginRight","name","type","onClick","handleDelete","marginLeft","DeleteOutlined","Title","Typography","OrderersForm","orderers","map","orderer","index","deleteOrderer","previousOrderersInitialValue","JSON","parse","window","localStorage","getItem","useState","newOrderer","setNewOrderer","previousOrderers","setPreviousOrderers","isNewOrdererInPreviousOrderers","some","o","onAddOrdererClick","newPreviousOrderers","push","setItem","stringify","addOrderer","marginTop","level","options","value","filterOption","inputValue","option","toUpperCase","indexOf","width","className","onChange","onKeyPress","event","key","size","placeholder","prefix","suffix","PlusOutlined","extractFloatStringFromCurrencyString","string","replace","Option","Select","ReceiptForm","state","cost","isModalVisible","handleMealCostUpdate","bind","handleMealNameUpdate","handleMealOrdererUpdate","addMealItem","deleteMealItem","title","dataIndex","render","text","record","this","setState","target","formatCurrencyString","message","error","removeAllNonDigits","slice","addCurrencyCommas","previous","curr","newString","trim","hasDecimalAlready","includes","newStringHasDecimal","newStringArray","split","processCurrencyWholeDollars","processCurrencyDecimals","visible","okText","onOk","onCancel","direction","ShoppingCartOutlined","DollarOutlined","inputMode","receipt","mealItems","length","dataSource","item","floatString","floatParsed","parseFloat","toFixed","columns","getColumns","pagination","total","toString","e","updateTotal","deliveryFee","updateDeliveryFee","serviceFee","updateServiceFee","React","Component","OutputTable","reduce","mealItem","subtotal","shareEquallyTotalPerPerson","totalMinusShareEquallyValues","totals","forEach","fractionOfSubtotal","getMealItemTotalByOrderer","getSubtotal","ordererShareOfTotal","shareTotalObject","shareOfTotal","totalFloat","serviceFeeFloat","deliveryFeeFloat","receiptValuesAreFloats","hasOrderers","hasMealItems","totalMakesSense","mealCostsAreFloats","every","getShareTotals","FrownOutlined","App","getRandomOrdererColor","backgroundColors","Math","floor","random","doesOrdererExist","find","isOrdererBlank","splice","mealItemIndices","reverse","success","Header","CoffeeOutlined","spin","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a162440e.chunk.js","sourcesContent":["import React from 'react';\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n\nexport default function OrdererCard(props) {\n  const styles = {\n    backgroundColor: props.backgroundColor,\n    borderRadius: '10px',\n    color: 'white',\n    fontSize: '25px',\n    padding: '5px 15px 5px 15px',\n    margin: '0 10px 10px 0',\n    display: 'inline-flex',\n    alignItems: 'center',\n  };\n\n  return (\n    <span style={styles}>\n      <UserOutlined style={{ marginRight: '5px' }} />\n      {props.name}\n      <Button type=\"primary\" onClick={props.handleDelete} style={{ marginLeft: '20px' }}>\n        <DeleteOutlined />\n      </Button>\n    </span>\n  );\n}","import React, { useState } from 'react';\nimport { Typography, Button, Input, AutoComplete } from 'antd';\nimport { PlusOutlined, UserOutlined } from '@ant-design/icons';\nimport OrdererCard from './OrdererCard';\nimport './App.css';\n\nconst { Title } = Typography;\n\nexport default function OrderersForm(props) {\n  const orderers = props.orderers.map((orderer, index) => {\n    return (\n      <OrdererCard\n        name={orderer.name}\n        backgroundColor={orderer.color}\n        handleDelete={() => { props.deleteOrderer(index) }}\n      />\n    );\n  });\n\n  const previousOrderersInitialValue = JSON.parse(window.localStorage.getItem('previousOrderers') || '[]');\n\n  const [newOrderer, setNewOrderer] = useState('');\n  const [previousOrderers, setPreviousOrderers] = useState(previousOrderersInitialValue);\n\n  const isNewOrdererInPreviousOrderers = () => previousOrderers.some(o => o === newOrderer)\n\n  const onAddOrdererClick = () => {\n    setNewOrderer('');\n    const isNotPreviousOrderer = !isNewOrdererInPreviousOrderers();\n    if (isNotPreviousOrderer && newOrderer) {\n      const newPreviousOrderers = previousOrderers\n      newPreviousOrderers.push(newOrderer);\n      setPreviousOrderers(newPreviousOrderers);\n      window.localStorage.setItem('previousOrderers', JSON.stringify(newPreviousOrderers));\n    }\n    props.addOrderer(newOrderer);\n  }\n\n  return (\n    <div style={{ marginTop: '60px' }}>\n      <Title level={2}>Orderer Details</Title>\n      <Title level={5}>\n        Add Orderer\n      </Title>\n\n      <AutoComplete\n        options={!newOrderer || isNewOrdererInPreviousOrderers() ? [] : previousOrderers.map(o => ({ value: o }))}\n        filterOption={(inputValue, option) => {\n          if (option) {\n            return option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n          } else {\n            return false;\n          }\n        }}\n        style={{ width: '100%' }}\n        className=\"mb-15\"\n        value={newOrderer}\n        onChange={(value) => { setNewOrderer(value) }}\n        onKeyPress={event => event.key === 'Enter' && onAddOrdererClick()}\n      >\n        <Input\n          size=\"large\"\n          placeholder=\"Orderer name\"\n          prefix={<UserOutlined />}\n          suffix={\n            <Button type=\"primary\" onClick={onAddOrdererClick}>\n              <PlusOutlined />\n            </Button>\n          }\n        />\n      </AutoComplete>\n      {orderers}\n    </div>\n\n  );\n}","export const extractFloatStringFromCurrencyString = (string) => (\n  string.replace(/[^0-9.]/g,'')\n);\n","import React from 'react';\nimport { Typography, Table, Button, Input, Select, Space, message, Modal } from 'antd';\nimport { ShoppingCartOutlined, DollarOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport { extractFloatStringFromCurrencyString } from './util';\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nexport default class ReceiptForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      cost: '',\n      orderer: 'changeme',\n      isModalVisible: false,\n    };\n\n    this.handleMealCostUpdate = this.handleMealCostUpdate.bind(this);\n    this.handleMealNameUpdate = this.handleMealNameUpdate.bind(this);\n    this.handleMealOrdererUpdate = this.handleMealOrdererUpdate.bind(this);\n    this.addMealItem = this.addMealItem.bind(this);\n    this.deleteMealItem = this.deleteMealItem.bind(this);\n  }\n\n  getColumns() {\n    const columns = [\n      {\n        title: 'Item',\n        dataIndex: 'name',\n        key: 'name',\n      },\n      {\n        title: 'Price',\n        dataIndex: 'cost',\n        key: 'cost',\n      },\n      {\n        title: 'Orderer',\n        dataIndex: 'orderer',\n        key: 'orderer',\n      },\n      {\n        title: 'Delete',\n        dataIndex: 'deleteFunction',\n        render: (text, record) => (\n          <Button type=\"primary\" onClick={() => { this.deleteMealItem(record.index) }}>\n            <DeleteOutlined />\n          </Button>\n        ),\n      },\n    ];\n    return columns;\n  }\n\n  handleMealNameUpdate(event) {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  handleMealCostUpdate(event) {\n    this.setState({\n      cost: this.formatCurrencyString(this.state.cost, event.target.value),\n    });\n  }\n\n  handleMealOrdererUpdate(orderer) {\n    this.setState({ orderer });\n  }\n\n  addMealItem() {\n    if (this.state.orderer !== 'changeme') {\n      this.setState({\n        name: '',\n        orderer: 'changeme',\n        cost: '',\n      });\n      this.props.addMealItem(this.state);\n    } else {\n      message.error('Change the orderer for this meal item.');\n    }\n  }\n\n  deleteMealItem(index) {\n    this.props.deleteMealItem(index);\n  }\n\n  removeAllNonDigits(string) {\n    return string.replace(/\\D/g, '');\n  }\n\n  processCurrencyDecimals(string) {\n    return this.removeAllNonDigits(string).slice(0, 2);\n  }\n\n  processCurrencyWholeDollars(string) {\n    return this.addCurrencyCommas(this.removeAllNonDigits(string));\n  }\n\n  addCurrencyCommas(string) {\n    return string.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  formatCurrencyString(previous, curr) {\n    let newString = curr.trim();\n    const hasDecimalAlready = previous.includes('.');\n    const newStringHasDecimal = newString.includes('.');\n\n    if (this.removeAllNonDigits(newString) === '') {\n      return '';\n    }\n\n    if (hasDecimalAlready && newStringHasDecimal) {\n      const newStringArray = newString.split('.');\n      return `$ ${this.processCurrencyWholeDollars(newStringArray[0])}.${this.processCurrencyDecimals(newStringArray[1])}`\n    } else if (newStringHasDecimal) {\n      return `$ ${this.processCurrencyWholeDollars(newString)}.`;\n    } else {\n      return `$ ${this.processCurrencyWholeDollars(newString)}`\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: '30px' }}>\n        <Title level={2}>\n          Order Details\n        </Title>\n\n        <Button\n          type=\"primary\"\n          size=\"large\" onClick={() => { this.setState({ isModalVisible: true }) }}\n          className=\"mb-15\"\n        >\n          Add Meal Item\n          <PlusOutlined />\n        </Button>\n\n        <Modal\n          title=\"Add Meal Item\"\n          visible={this.state.isModalVisible}\n          okText=\"Add Meal Item\"\n          onOk={this.addMealItem}\n          onCancel={() => { this.setState({ isModalVisible: false }) }}\n        >\n          <Space direction=\"vertical\" className=\"w-100-percent\">\n            <Input\n              value={this.state.name}\n              onChange={this.handleMealNameUpdate}\n              suffix={<ShoppingCartOutlined />}\n              size=\"large\"\n              placeholder=\"Meal item name\"\n              className=\"w-100-percent\"\n            />\n            <Input\n              value={this.state.cost}\n              onChange={this.handleMealCostUpdate}\n              suffix={<DollarOutlined />}\n              size=\"large\"\n              placeholder=\"Meal item price\"\n              className=\"w-100-percent\"\n              inputMode=\"decimal\"\n            />\n            <Select\n              style={{ width: '100%' }}\n              size=\"large\"\n              value={this.state.orderer}\n              className=\"w-100-percent\"\n              onChange={this.handleMealOrdererUpdate}\n            >\n              <Option value=\"changeme\">Orderer</Option>\n              {\n                this.props.orderers.map((orderer, index) => (\n                  <Option value={orderer.name}>{orderer.name}</Option>\n                ))\n              }\n            </Select>\n          </Space>\n        </Modal>\n\n        {\n          !!this.props.receipt.mealItems.length && (\n            <Table\n              key={this.props.receipt.mealItems}\n              dataSource={this.props.receipt.mealItems.map((item, index) => {\n                item.index = index;\n                const floatString = extractFloatStringFromCurrencyString(item.cost);\n                const floatParsed = parseFloat(floatString);\n                item.cost = `$${floatParsed.toFixed(2)}`;\n                return item;\n              })}\n              columns={this.getColumns()}\n              pagination={false}\n              className=\"mb-15\"\n            />\n          )\n        }\n\n        <Title level={5}>\n          Total\n        </Title>\n        <Input\n          value={this.props.receipt.total.toString()}\n          onChange={(e) => { this.props.updateTotal(this.formatCurrencyString(this.props.receipt.total, e.target.value)); }}\n          size=\"large\"\n          placeholder=\"$ 0.00\"\n          suffix={<DollarOutlined />}\n          className=\"mb-15 max-w-300\"\n          inputMode=\"decimal\"\n        />\n\n        <Title level={5}>\n          Delivery Fee\n        </Title>\n        <Input\n          value={this.props.receipt.deliveryFee.toString()}\n          onChange={(e) => { this.props.updateDeliveryFee(this.formatCurrencyString(this.props.receipt.deliveryFee, e.target.value)); }}\n          size=\"large\"\n          placeholder=\"$ 0.00\"\n          suffix={<DollarOutlined />}\n          className=\"mb-15 max-w-300\"\n          inputMode=\"decimal\"\n        />\n\n        <Title level={5}>\n          Service Fee\n        </Title>\n        <Input\n          value={this.props.receipt.serviceFee.toString()}\n          onChange={(e) => { this.props.updateServiceFee(this.formatCurrencyString(this.props.receipt.serviceFee, e.target.value)); }}\n          size=\"large\"\n          placeholder=\"$ 0.00\"\n          suffix={<DollarOutlined />}\n          className=\"mb-15 max-w-300\"\n          inputMode=\"decimal\"\n        />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css';\nimport { Typography, Table } from 'antd';\nimport { FrownOutlined } from '@ant-design/icons';\nimport { extractFloatStringFromCurrencyString } from './util';\n\nconst { Title } = Typography;\n\nconst columns = [\n  {\n    title: 'Orderer',\n    dataIndex: 'orderer',\n    key: 'orderer',\n  },\n  {\n    title: 'Share of Total',\n    dataIndex: 'shareOfTotal',\n    key: 'shareOfTotal',\n  },\n];\n\nexport default class OutputTable extends React.Component {\n  getMealItemTotalByOrderer(orderer) {\n\n    const itemTotal = this.props.receipt.mealItems.reduce((total, mealItem) => (\n      mealItem.orderer === orderer ? total + parseFloat(extractFloatStringFromCurrencyString(mealItem.cost)) : total\n    ), 0);\n    return itemTotal;\n  }\n\n  getSubtotal() {\n    return this.props.receipt.mealItems.reduce((subtotal, mealItem) => (\n      subtotal + parseFloat(extractFloatStringFromCurrencyString(mealItem.cost))\n    ), 0);\n  }\n\n  getShareTotals() {\n    const shareEquallyTotalPerPerson = (parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee))\n      + parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee))) / this.props.orderers.length;\n\n    const totalMinusShareEquallyValues = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.total)) - (\n      parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee))\n        + parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee))\n    );\n\n    const totals = [];\n    this.props.orderers.forEach((orderer) => {\n      const mealItemTotalForOrderer = this.getMealItemTotalByOrderer(orderer.name);\n      const fractionOfSubtotal = mealItemTotalForOrderer / this.getSubtotal();\n      const ordererShareOfTotal = shareEquallyTotalPerPerson + (fractionOfSubtotal * totalMinusShareEquallyValues);\n      const shareTotalObject = {\n        orderer: orderer.name,\n        shareOfTotal: `$${ordererShareOfTotal.toFixed(2)}`,\n      }\n      totals.push(shareTotalObject);\n    })\n    return totals;\n  }\n\n  render() {\n    const totalFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.total));\n    const serviceFeeFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee));\n    const deliveryFeeFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee));\n    const receiptValuesAreFloats = totalFloat && serviceFeeFloat && deliveryFeeFloat;\n    const hasOrderers = this.props.orderers.length;\n    const hasMealItems = this.props.receipt.mealItems.length;\n    const totalMakesSense = totalFloat >= (this.getSubtotal() + serviceFeeFloat + deliveryFeeFloat);\n    const mealCostsAreFloats = this.props.receipt.mealItems.every((mealItem) => (\n      parseFloat(extractFloatStringFromCurrencyString(mealItem.cost))\n    ));\n\n    if (receiptValuesAreFloats && hasOrderers && mealCostsAreFloats && hasMealItems && totalMakesSense) {\n      return (\n        <div style={{ padding: '30px 0 30px 0' }}>\n          <Title>\n            Your splits\n          </Title>\n          <Table\n            columns={columns}\n            dataSource={this.getShareTotals()}\n            pagination={false}\n            className=\"mb-15\"\n          />\n        </div>\n      )\n    }\n\n    return (\n      <div style={{ marginTop: '30px' }}>\n        <Title level={2}>\n          No splits to show\n        </Title>\n        <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <span style={{ margin: 'auto', fontSize: '100px' }}>\n            <FrownOutlined />\n          </span>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport OrderersForm from './OrderersForm';\nimport ReceiptForm from './ReceiptForm';\nimport OutputTable from './OutputTable';\nimport { Layout, message } from 'antd';\nimport { CoffeeOutlined } from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      receipt: {\n        mealItems: [],\n        deliveryFee: '',\n        serviceFee: '',\n        total: '',\n      },\n      orderers: [],\n    };\n  }\n\n  getRandomOrdererColor = () => {\n    const backgroundColors = ['#ff8519', '#07d907', '#c904db', '#fa0c34', '#0cfae2', '#ff1979'];\n    return backgroundColors[Math.floor(Math.random() * backgroundColors.length)]\n  }\n\n  addOrderer = (orderer) => {\n    const doesOrdererExist = !!this.state.orderers.find(o => o.name === orderer);\n    const isOrdererBlank = orderer === '';\n\n    if (doesOrdererExist) {\n      message.error('Orderers must be unique.');\n    } else if (isOrdererBlank) {\n      message.error('Orderer is required.');\n    } else {\n      const orderers = this.state.orderers;\n      orderers.push({\n        name: orderer,\n        color: this.getRandomOrdererColor(),\n      });\n      this.setState({ orderers });\n    }\n  }\n\n  deleteOrderer = (index) => {\n    const orderers = this.state.orderers;\n    const orderer = orderers[index];\n    orderers.splice(index, 1);\n    this.setState({ orderers });\n\n    // We need to delete all meal items that this person ordered\n    const mealItems = this.state.receipt.mealItems;\n    const mealItemIndices = []\n    mealItems.forEach((mealItem, index) => {\n      if (mealItem.orderer === orderer.name) {\n        mealItemIndices.push(index);\n      }\n    });\n\n    mealItemIndices.reverse().forEach((index) => {\n      mealItems.splice(index, 1);\n    });\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  updateTotal = (total) => {\n    const receipt = this.state.receipt;\n    receipt.total = total;\n    this.setState({ receipt });\n  }\n\n  updateDeliveryFee = (deliveryFee) => {\n    const receipt = this.state.receipt;\n    receipt.deliveryFee = deliveryFee;\n    this.setState({ receipt });\n  }\n\n  updateServiceFee = (serviceFee) => {\n    const receipt = this.state.receipt;\n    receipt.serviceFee = serviceFee;\n    this.setState({ receipt });\n  }\n\n  addMealItem = (mealItem) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.push(mealItem);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems\n    this.setState({ receipt });\n    message.success('Meal item added.')\n  }\n\n  deleteMealItem = (index) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.splice(index, 1);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Header className=\"white fs-30\">\n          <CoffeeOutlined spin={true} />\n          {'   '}\n          Uber Eats Bill Split Calculator\n        </Layout.Header>\n        <Layout>\n          <Layout.Content className=\"main-content\">\n            <OrderersForm\n              orderers={this.state.orderers}\n              addOrderer={this.addOrderer}\n              deleteOrderer={this.deleteOrderer}\n            />\n\n            <ReceiptForm\n              updateServiceFee={this.updateServiceFee}\n              updateDeliveryFee={this.updateDeliveryFee}\n              updateTotal={this.updateTotal}\n              addMealItem={this.addMealItem}\n              deleteMealItem={this.deleteMealItem}\n              orderers={this.state.orderers}\n              receipt={this.state.receipt}\n            />\n\n            <OutputTable\n              receipt={this.state.receipt}\n              orderers={this.state.orderers}\n            />\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}