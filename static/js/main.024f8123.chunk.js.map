{"version":3,"sources":["OrdererCard.jsx","OrderersForm.jsx","util.js","ReceiptForm.jsx","OutputTable.jsx","App.js","index.js"],"names":["OrdererCard","props","styles","backgroundColor","borderRadius","color","fontSize","padding","margin","display","alignItems","style","UserOutlined","marginRight","name","type","onClick","handleDelete","marginLeft","DeleteOutlined","Title","Typography","OrderersForm","orderers","map","orderer","index","deleteOrderer","useState","newOrderer","setNewOrderer","onAddOrdererClick","addOrderer","marginTop","level","size","placeholder","prefix","value","onChange","event","target","onKeyPress","key","suffix","PlusOutlined","className","extractFloatStringFromCurrencyString","string","replace","Option","Select","ReceiptForm","state","cost","isModalVisible","handleMealCostUpdate","bind","handleMealNameUpdate","handleMealOrdererUpdate","addMealItem","deleteMealItem","title","dataIndex","render","text","record","this","setState","formatCurrencyString","message","error","removeAllNonDigits","slice","addCurrencyCommas","previous","curr","newString","trim","hasDecimalAlready","includes","newStringHasDecimal","newStringArray","split","processCurrencyWholeDollars","processCurrencyDecimals","visible","okText","onOk","onCancel","direction","ShoppingCartOutlined","DollarOutlined","width","receipt","mealItems","length","dataSource","item","floatString","floatParsed","parseFloat","toFixed","columns","getColumns","pagination","total","toString","e","updateTotal","deliveryFee","updateDeliveryFee","serviceFee","updateServiceFee","React","Component","OutputTable","reduce","mealItem","subtotal","shareEquallyTotalPerPerson","totalMinusShareEquallyValues","totals","forEach","fractionOfSubtotal","getMealItemTotalByOrderer","getSubtotal","ordererShareOfTotal","shareTotalObject","shareOfTotal","push","totalFloat","serviceFeeFloat","deliveryFeeFloat","receiptValuesAreFloats","hasOrderers","hasMealItems","totalMakesSense","mealCostsAreFloats","every","getShareTotals","FrownOutlined","App","getRandomOrdererColor","backgroundColors","Math","floor","random","doesOrdererExist","find","o","isOrdererBlank","splice","mealItemIndices","reverse","Header","CoffeeOutlined","spin","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.024f8123.chunk.js","sourcesContent":["import React from 'react';\r\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nexport default function OrdererCard(props) {\r\n  const styles = {\r\n    backgroundColor: props.backgroundColor,\r\n    borderRadius: '10px',\r\n    color: 'white',\r\n    fontSize: '25px',\r\n    padding: '5px 15px 5px 15px',\r\n    margin: '0 10px 10px 0',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <span style={styles}>\r\n      <UserOutlined style={{ marginRight: '5px' }} />\r\n      {props.name}\r\n      <Button type=\"primary\" onClick={props.handleDelete} style={{ marginLeft: '20px' }}>\r\n        <DeleteOutlined />\r\n      </Button>\r\n    </span>\r\n  );\r\n}","import React,  {useState} from 'react';\r\nimport { Typography, Button, Input } from 'antd';\r\nimport { PlusOutlined, UserOutlined } from '@ant-design/icons';\r\nimport OrdererCard from './OrdererCard';\r\nimport './App.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function OrderersForm(props) {\r\n  const orderers = props.orderers.map((orderer, index) => {\r\n    return (\r\n      <OrdererCard\r\n        name={orderer.name}\r\n        backgroundColor={orderer.color}\r\n        handleDelete={() => { props.deleteOrderer(index) }}\r\n      />\r\n    );\r\n  });\r\n\r\n  const [newOrderer, setNewOrderer] = useState('');\r\n\r\n  const onAddOrdererClick = () => {\r\n    setNewOrderer('');\r\n    props.addOrderer(newOrderer);\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: '60px' }}>\r\n      <Title level={2}>Orderer Details</Title>\r\n      <Title level={5}>\r\n        Add Orderer\r\n      </Title>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Orderer name\"\r\n        prefix={<UserOutlined />}\r\n        value={newOrderer}\r\n        onChange={(event) => { setNewOrderer(event.target.value) }}\r\n        onKeyPress={event => event.key === 'Enter' && onAddOrdererClick()}\r\n        suffix={\r\n          <Button type=\"primary\" onClick={onAddOrdererClick}>\r\n            <PlusOutlined />\r\n          </Button>\r\n        }\r\n        className=\"mb-15\"\r\n      />\r\n       {orderers}\r\n    </div>\r\n\r\n  );\r\n}","export const extractFloatStringFromCurrencyString = (string) => (\r\n  string.replace(/[^0-9.]/g,'')\r\n);\r\n","import React from 'react';\r\nimport { Typography, Table, Button, Input, Select, Space, message, Modal } from 'antd';\r\nimport { ShoppingCartOutlined, DollarOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { extractFloatStringFromCurrencyString } from './util';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default class ReceiptForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      cost: '',\r\n      orderer: 'changeme',\r\n      isModalVisible: false,\r\n    };\r\n\r\n    this.handleMealCostUpdate = this.handleMealCostUpdate.bind(this);\r\n    this.handleMealNameUpdate = this.handleMealNameUpdate.bind(this);\r\n    this.handleMealOrdererUpdate = this.handleMealOrdererUpdate.bind(this);\r\n    this.addMealItem = this.addMealItem.bind(this);\r\n    this.deleteMealItem = this.deleteMealItem.bind(this);\r\n  }\r\n\r\n  getColumns() {\r\n    const columns = [\r\n      {\r\n        title: 'Item',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'cost',\r\n        key: 'cost',\r\n      },\r\n      {\r\n        title: 'Orderer',\r\n        dataIndex: 'orderer',\r\n        key: 'orderer',\r\n      },\r\n      {\r\n        title: 'Delete',\r\n        dataIndex: 'deleteFunction',\r\n        render: (text, record) => (\r\n            <Button type=\"primary\" onClick={() => { this.deleteMealItem(record.index) }}>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          ),\r\n      },\r\n    ];\r\n    return columns;\r\n  }\r\n\r\n  handleMealNameUpdate(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleMealCostUpdate(event) {\r\n    this.setState({\r\n      cost: this.formatCurrencyString(this.state.cost, event.target.value),\r\n    });\r\n  }\r\n\r\n  handleMealOrdererUpdate(orderer) {\r\n    this.setState({ orderer });\r\n  }\r\n\r\n  addMealItem() {\r\n    if (this.state.orderer !== 'changeme') {\r\n      this.setState({\r\n        name: '',\r\n        orderer: 'changeme',\r\n        cost: '',\r\n        isModalVisible: false,\r\n      });\r\n      this.props.addMealItem(this.state);\r\n    } else {\r\n      message.error('Change the orderer for this meal item.');\r\n    }\r\n  }\r\n\r\n  deleteMealItem(index) {\r\n    this.props.deleteMealItem(index);\r\n  }\r\n\r\n  removeAllNonDigits(string) {\r\n    return string.replace(/\\D/g,'');\r\n  }\r\n\r\n  processCurrencyDecimals(string) {\r\n    return this.removeAllNonDigits(string).slice(0, 2);\r\n  }\r\n\r\n  processCurrencyWholeDollars(string) {\r\n    return this.addCurrencyCommas(this.removeAllNonDigits(string));\r\n  }\r\n\r\n  addCurrencyCommas(string) {\r\n    return string.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n\r\n  formatCurrencyString(previous, curr) {\r\n    let newString = curr.trim();\r\n    const hasDecimalAlready = previous.includes('.');\r\n    const newStringHasDecimal = newString.includes('.');\r\n\r\n    if (this.removeAllNonDigits(newString) === '') {\r\n      return '';\r\n    }\r\n\r\n    if (hasDecimalAlready && newStringHasDecimal) {\r\n      const newStringArray = newString.split('.');\r\n      return `$ ${this.processCurrencyWholeDollars(newStringArray[0])}.${this.processCurrencyDecimals(newStringArray[1])}`\r\n    } else if (newStringHasDecimal) {\r\n      return `$ ${this.processCurrencyWholeDollars(newString)}.`;\r\n    } else {\r\n      return `$ ${this.processCurrencyWholeDollars(newString)}`\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: '30px' }}>\r\n        <Title level={2}>\r\n          Order Details\r\n        </Title>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\" onClick={() => { this.setState({ isModalVisible: true }) }}\r\n          className=\"mb-15\"\r\n        >\r\n          Add Meal Item\r\n          <PlusOutlined />\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Add Meal Item\"\r\n          visible={this.state.isModalVisible}\r\n          okText=\"Add Meal Item\"\r\n          onOk={this.addMealItem}\r\n          onCancel={() => { this.setState({ isModalVisible: false }) }}\r\n        >\r\n          <Space direction=\"vertical\"  className=\"w-100-percent\">\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={this.handleMealNameUpdate}\r\n              suffix={<ShoppingCartOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item name\"\r\n              className=\"w-100-percent\"\r\n            />\r\n            <Input\r\n              value={this.state.cost}\r\n              onChange={this.handleMealCostUpdate}\r\n              suffix={<DollarOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item price\"\r\n              className=\"w-100-percent\"\r\n            />\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              size=\"large\"\r\n              value={this.state.orderer}\r\n              className=\"w-100-percent\"\r\n              onChange={this.handleMealOrdererUpdate}\r\n            >\r\n              <Option value=\"changeme\">Orderer</Option>\r\n              {\r\n                this.props.orderers.map((orderer, index) => (\r\n                  <Option value={orderer.name}>{orderer.name}</Option>\r\n                ))\r\n              }\r\n            </Select>\r\n          </Space>\r\n        </Modal>\r\n\r\n        {\r\n          !!this.props.receipt.mealItems.length && (\r\n            <Table\r\n              key={this.props.receipt.mealItems}\r\n              dataSource={this.props.receipt.mealItems.map((item, index) => {\r\n                item.index = index;\r\n                const floatString = extractFloatStringFromCurrencyString(item.cost);\r\n                const floatParsed = parseFloat(floatString);\r\n                item.cost = `$${floatParsed.toFixed(2)}`;\r\n                return item;\r\n              })}\r\n              columns={this.getColumns()}\r\n              pagination={false}\r\n              className=\"mb-15\"\r\n            />\r\n          )\r\n        }\r\n\r\n        <Title level={5}>\r\n          Total\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.total.toString()}\r\n          onChange={(e) => { this.props.updateTotal(this.formatCurrencyString(this.props.receipt.total, e.target.value)); }}\r\n          size=\"large\"\r\n          placeholder=\"$ 0.00\"\r\n          suffix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={5}>\r\n          Delivery Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.deliveryFee.toString()}\r\n          onChange={(e) => { this.props.updateDeliveryFee(this.formatCurrencyString(this.props.receipt.deliveryFee, e.target.value)); }}\r\n          size=\"large\"\r\n          placeholder=\"$ 0.00\"\r\n          suffix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={5}>\r\n          Service Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.serviceFee.toString()}\r\n          onChange={(e) => { this.props.updateServiceFee(this.formatCurrencyString(this.props.receipt.serviceFee, e.target.value)); }}\r\n          size=\"large\"\r\n          placeholder=\"$ 0.00\"\r\n          suffix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Typography, Table } from 'antd';\r\nimport { FrownOutlined } from '@ant-design/icons';\r\nimport { extractFloatStringFromCurrencyString } from './util';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Orderer',\r\n    dataIndex: 'orderer',\r\n    key: 'orderer',\r\n  },\r\n  {\r\n    title: 'Share of Total',\r\n    dataIndex: 'shareOfTotal',\r\n    key: 'shareOfTotal',\r\n  },\r\n];\r\n\r\nexport default class OutputTable extends React.Component {\r\n  getMealItemTotalByOrderer(orderer) {\r\n\r\n    const itemTotal = this.props.receipt.mealItems.reduce((total, mealItem) => (\r\n      mealItem.orderer === orderer ? total + parseFloat(extractFloatStringFromCurrencyString(mealItem.cost)) : total\r\n    ), 0);\r\n    return itemTotal;\r\n  }\r\n\r\n  getSubtotal() {\r\n    return this.props.receipt.mealItems.reduce((subtotal, mealItem) => (\r\n      subtotal + parseFloat(extractFloatStringFromCurrencyString(mealItem.cost))\r\n    ), 0);\r\n  }\r\n\r\n  getShareTotals() {\r\n    const shareEquallyTotalPerPerson = (parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee))\r\n      + parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee))) / this.props.orderers.length;\r\n\r\n    const totalMinusShareEquallyValues = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.total)) - (\r\n      parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee))\r\n        + parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee))\r\n    );\r\n\r\n    const totals = [];\r\n    this.props.orderers.forEach((orderer) => {\r\n      const mealItemTotalForOrderer = this.getMealItemTotalByOrderer(orderer.name);\r\n      const fractionOfSubtotal = mealItemTotalForOrderer / this.getSubtotal();\r\n      const ordererShareOfTotal = shareEquallyTotalPerPerson + (fractionOfSubtotal * totalMinusShareEquallyValues);\r\n      const shareTotalObject = {\r\n        orderer: orderer.name,\r\n        shareOfTotal: `$${ordererShareOfTotal.toFixed(2)}`,\r\n      }\r\n      totals.push(shareTotalObject);\r\n    })\r\n    return totals;\r\n  }\r\n\r\n  render() {\r\n    const totalFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.total));\r\n    const serviceFeeFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.serviceFee));\r\n    const deliveryFeeFloat = parseFloat(extractFloatStringFromCurrencyString(this.props.receipt.deliveryFee));\r\n    const receiptValuesAreFloats = totalFloat && serviceFeeFloat && deliveryFeeFloat;\r\n    const hasOrderers = this.props.orderers.length;\r\n    const hasMealItems = this.props.receipt.mealItems.length;\r\n    const totalMakesSense = totalFloat >= (this.getSubtotal() + serviceFeeFloat + deliveryFeeFloat);\r\n    const mealCostsAreFloats = this.props.receipt.mealItems.every((mealItem) => (\r\n      parseFloat(extractFloatStringFromCurrencyString(mealItem.cost))\r\n    ));\r\n\r\n    if (receiptValuesAreFloats && hasOrderers && mealCostsAreFloats && hasMealItems && totalMakesSense) {\r\n      return (\r\n        <div style={{ padding: '30px 0 30px 0' }}>\r\n          <Title>\r\n            Your splits\r\n          </Title>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={this.getShareTotals()}\r\n            pagination={false}\r\n            className=\"mb-15\"\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: '30px' }}>\r\n        <Title level={2}>\r\n          No splits to show\r\n        </Title>\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <span style={{ margin: 'auto', fontSize: '100px' }}>\r\n            <FrownOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport OrderersForm from './OrderersForm';\nimport ReceiptForm from './ReceiptForm';\nimport OutputTable from './OutputTable';\nimport { Layout, message } from 'antd';\nimport { CoffeeOutlined } from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      receipt: {\n        mealItems: [],\n        deliveryFee: '',\n        serviceFee: '',\n        total: '',\n      },\n      orderers: [],\n    };\n  }\n\n  getRandomOrdererColor = () => {\n    const backgroundColors = ['#ff8519', '#07d907', '#c904db', '#fa0c34', '#0cfae2', '#ff1979'];\n    return backgroundColors[Math.floor(Math.random() * backgroundColors.length)]\n  }\n\n  addOrderer = (orderer) => {\n    const doesOrdererExist = !!this.state.orderers.find(o => o.name === orderer);\n    const isOrdererBlank = orderer === '';\n\n    if (doesOrdererExist) {\n      message.error('Orderers must be unique.');\n    } else if (isOrdererBlank) {\n      message.error('Orderer is required.');\n    } else {\n      const orderers = this.state.orderers;\n      orderers.push({\n        name: orderer,\n        color: this.getRandomOrdererColor(),\n      });\n      this.setState({ orderers });\n    }\n  }\n\n  deleteOrderer = (index) => {\n    const orderers = this.state.orderers;\n    const orderer = orderers[index];\n    orderers.splice(index, 1);\n    this.setState({ orderers });\n\n    // We need to delete all meal items that this person ordered\n    const mealItems = this.state.receipt.mealItems;\n    const mealItemIndices = []\n    mealItems.forEach((mealItem, index) => {\n      if (mealItem.orderer === orderer.name) {\n        mealItemIndices.push(index);\n      }\n    });\n\n    mealItemIndices.reverse().forEach((index) => {\n      mealItems.splice(index, 1);\n    });\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  updateTotal = (total) => {\n    const receipt = this.state.receipt;\n    receipt.total = total;\n    this.setState({ receipt });\n  }\n\n  updateDeliveryFee = (deliveryFee) => {\n    const receipt = this.state.receipt;\n    receipt.deliveryFee = deliveryFee;\n    this.setState({ receipt });  }\n\n  updateServiceFee = (serviceFee) => {\n    const receipt = this.state.receipt;\n    receipt.serviceFee = serviceFee;\n    this.setState({ receipt });  }\n\n  addMealItem = (mealItem) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.push(mealItem);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems\n    this.setState({ receipt });\n  }\n\n  deleteMealItem = (index) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.splice(index, 1);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Header className=\"white fs-30\">\n          <CoffeeOutlined spin={true} />\n          {'   '}\n          Uber Eats Bill Splitter\n        </Layout.Header>\n        <Layout>\n          <Layout.Content className=\"main-content\">\n            <OrderersForm\n              orderers={this.state.orderers}\n              addOrderer={this.addOrderer}\n              deleteOrderer={this.deleteOrderer}\n            />\n\n            <ReceiptForm\n              updateServiceFee={this.updateServiceFee}\n              updateDeliveryFee={this.updateDeliveryFee}\n              updateTotal={this.updateTotal}\n              addMealItem={this.addMealItem}\n              deleteMealItem={this.deleteMealItem}\n              orderers={this.state.orderers}\n              receipt={this.state.receipt}\n            />\n\n            <OutputTable\n              receipt={this.state.receipt}\n              orderers={this.state.orderers}\n            />\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}