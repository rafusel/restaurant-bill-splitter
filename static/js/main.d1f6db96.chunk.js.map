{"version":3,"sources":["OrdererCard.jsx","OrderersForm.jsx","ReceiptForm.jsx","OutputTable.jsx","App.js","index.js"],"names":["OrdererCard","props","backgroundColors","useState","Math","floor","random","length","styles","backgroundColor","borderRadius","color","fontSize","padding","margin","display","alignItems","style","UserOutlined","name","type","onClick","handleDelete","marginLeft","DeleteOutlined","Title","Typography","OrderersForm","orderers","map","orderer","index","Fragment","toString","deleteOrderer","newOrderer","setNewOrderer","onAddOrdererClick","addOrderer","marginTop","level","size","placeholder","prefix","value","onChange","event","target","onKeyPress","key","suffix","PlusOutlined","marginBottom","Option","Select","ReceiptForm","state","cost","handleMealCostUpdate","bind","handleMealNameUpdate","handleMealOrdererUpdate","addMealItem","deleteMealItem","title","dataIndex","render","text","record","this","setState","alert","flex","className","ShoppingCartOutlined","DollarOutlined","width","receipt","mealItems","dataSource","item","columns","getColumns","total","e","updateTotal","deliveryFee","updateDeliveryFee","serviceFee","updateServiceFee","React","Component","OutputTable","reduce","mealItem","parseFloat","subtotal","shareEquallyTotalPerPerson","totalMinusShareEquallyValues","totals","forEach","fractionOfSubtotal","getMealItemTotalByOrderer","getSubtotal","shareTotalObject","shareOfTotal","toFixed","push","totalFloat","serviceFeeFloat","deliveryFeeFloat","receiptValuesAreFloats","hasOrderers","mealCostsAreFloats","every","paddingBottom","getShareTotals","FrownOutlined","App","splice","mealItemIndices","reverse","Header","CoffeeOutlined","spin","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1f6db96.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nexport default function OrdererCard(props) {\r\n  const backgroundColors = ['#ff8519', '#07d907', '#c904db', '#fa0c34', '#0cfae2', '#ff1979'];\r\n  const [backgroundColor] = useState(\r\n    backgroundColors[Math.floor(Math.random() * backgroundColors.length)]\r\n  );\r\n  const styles = {\r\n    backgroundColor: backgroundColor,\r\n    borderRadius: '10px',\r\n    color: 'white',\r\n    fontSize: '25px',\r\n    padding: '5px 15px 5px 15px',\r\n    margin: '0 10px 10px 0',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <span style={styles}>\r\n      <UserOutlined />\r\n      {`  ${props.name}`}\r\n      <Button type=\"primary\" onClick={props.handleDelete} style={{ marginLeft: '10px' }}>\r\n        <DeleteOutlined />\r\n      </Button>\r\n    </span>\r\n  );\r\n}","import React,  {useState} from 'react';\r\nimport { Typography, Button, Input } from 'antd';\r\nimport { PlusOutlined, UserOutlined } from '@ant-design/icons';\r\nimport OrdererCard from './OrdererCard';\r\nimport './App.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function OrderersForm(props) {\r\n  const orderers = props.orderers.map((orderer, index) => {\r\n    return (\r\n      <React.Fragment>\r\n        <OrdererCard\r\n          name={orderer.toString()}\r\n          handleDelete={() => { props.deleteOrderer(index) }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  });\r\n\r\n  const [newOrderer, setNewOrderer] = useState('');\r\n\r\n  const onAddOrdererClick = () => {\r\n\r\n    setNewOrderer('');\r\n    props.addOrderer(newOrderer);\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: '60px' }}>\r\n      <Title>Orderer Details</Title>\r\n      <Title level={2}>\r\n        Add Orderer\r\n      </Title>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Orderer name\"\r\n        prefix={<UserOutlined />}\r\n        value={newOrderer}\r\n        onChange={(event) => { setNewOrderer(event.target.value) }}\r\n        onKeyPress={event => event.key === 'Enter' && onAddOrdererClick()}\r\n        suffix={\r\n          <Button type=\"primary\" onClick={onAddOrdererClick}>\r\n            <PlusOutlined />\r\n          </Button>\r\n        }\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n       {orderers}\r\n    </div>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport { Typography, Table, Button, Input, Select, Row, Col } from 'antd';\r\nimport { ShoppingCartOutlined, DollarOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default class ReceiptForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      cost: '',\r\n      orderer: 'changeme',\r\n    };\r\n\r\n    this.handleMealCostUpdate = this.handleMealCostUpdate.bind(this);\r\n    this.handleMealNameUpdate = this.handleMealNameUpdate.bind(this);\r\n    this.handleMealOrdererUpdate = this.handleMealOrdererUpdate.bind(this);\r\n    this.addMealItem = this.addMealItem.bind(this);\r\n    this.deleteMealItem = this.deleteMealItem.bind(this);\r\n  }\r\n\r\n  getColumns() {\r\n    const columns = [\r\n      {\r\n        title: 'Item',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'cost',\r\n        key: 'cost',\r\n      },\r\n      {\r\n        title: 'Orderer',\r\n        dataIndex: 'orderer',\r\n        key: 'orderer',\r\n      },\r\n      {\r\n        title: 'Delete',\r\n        dataIndex: 'deleteFunction',\r\n        render: (text, record) => (\r\n            <Button type=\"primary\" onClick={() => { this.deleteMealItem(record.index) }}>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          ),\r\n      },\r\n    ];\r\n    return columns;\r\n  }\r\n\r\n  handleMealNameUpdate(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleMealCostUpdate(event) {\r\n    this.setState({\r\n      cost: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleMealOrdererUpdate(orderer) {\r\n    this.setState({ orderer });\r\n  }\r\n\r\n  addMealItem() {\r\n    if (this.state.orderer !== 'changeme') {\r\n      this.setState({\r\n        name: '',\r\n        orderer: 'changeme',\r\n        cost: '',\r\n      });\r\n      this.props.addMealItem(this.state);\r\n    } else {\r\n      alert('Change the orderer for this meal item.')\r\n    }\r\n  }\r\n\r\n  deleteMealItem(index) {\r\n    this.props.deleteMealItem(index);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: '30px' }}>\r\n        <Title>\r\n          Meal Details\r\n        </Title>\r\n\r\n        <Title level={2}>\r\n          Add Meal Items\r\n        </Title>\r\n\r\n        <Row style={{ marginBottom: '20px' }}>\r\n          <Col flex=\"auto\" className=\"pr-5\">\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={this.handleMealNameUpdate}\r\n              prefix={<ShoppingCartOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item name\"\r\n            />\r\n          </Col>\r\n\r\n          <Col flex=\"auto\" className=\"pr-5\">\r\n            <Input\r\n              value={this.state.cost}\r\n              onChange={this.handleMealCostUpdate}\r\n              prefix={<DollarOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item price\"\r\n            />\r\n          </Col>\r\n\r\n          <Col flex=\"auto\" className=\"pr-5\">\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              size=\"large\"\r\n              value={this.state.orderer}\r\n              onChange={this.handleMealOrdererUpdate}\r\n            >\r\n              <Option value=\"changeme\">Orderer</Option>\r\n              {\r\n                this.props.orderers.map((orderer, index) => (\r\n                  <Option value={orderer}>{orderer}</Option>\r\n                ))\r\n              }\r\n            </Select>\r\n          </Col>\r\n\r\n          <Col flex=\"10px\">\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              onClick={this.addMealItem}\r\n            >\r\n              Add Meal Item\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        {\r\n          !!this.props.receipt.mealItems.length && (\r\n            <Table\r\n              key={this.props.receipt.mealItems}\r\n              dataSource={this.props.receipt.mealItems.map((item, index) => {\r\n                item.index = index;\r\n                return item;\r\n              })}\r\n              columns={this.getColumns()}\r\n            />\r\n          )\r\n        }\r\n\r\n        <Title level={2}>\r\n          Total\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.total.toString()}\r\n          onChange={(e) => { this.props.updateTotal(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={2}>\r\n          Delivery Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.deliveryFee.toString()}\r\n          onChange={(e) => { this.props.updateDeliveryFee(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={2}>\r\n          Service Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.serviceFee.toString()}\r\n          onChange={(e) => { this.props.updateServiceFee(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Typography, Table } from 'antd';\r\nimport { FrownOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Orderer',\r\n    dataIndex: 'orderer',\r\n    key: 'orderer',\r\n  },\r\n  {\r\n    title: 'Share of Total',\r\n    dataIndex: 'shareOfTotal',\r\n    key: 'shareOfTotal',\r\n  },\r\n];\r\n\r\nexport default class OutputTable extends React.Component {\r\n  getMealItemTotalByOrderer(orderer) {\r\n\r\n    const itemTotal = this.props.receipt.mealItems.reduce((total, mealItem) => (\r\n      mealItem.orderer === orderer ? total + parseFloat(mealItem.cost) : total\r\n    ), 0);\r\n    return itemTotal;\r\n  }\r\n\r\n  getSubtotal() {\r\n    return this.props.receipt.mealItems.reduce((subtotal, mealItem) => (\r\n      subtotal + parseFloat(mealItem.cost)\r\n    ), 0);\r\n  }\r\n\r\n  getShareTotals() {\r\n    const shareEquallyTotalPerPerson = (parseFloat(this.props.receipt.deliveryFee)\r\n      + parseFloat(this.props.receipt.serviceFee)) / this.props.orderers.length;\r\n\r\n    const totalMinusShareEquallyValues = parseFloat(this.props.receipt.total) - (\r\n      parseFloat(this.props.receipt.deliveryFee) + parseFloat(this.props.receipt.serviceFee)\r\n    );\r\n\r\n    const totals = [];\r\n    this.props.orderers.forEach((orderer) => {\r\n      const mealItemTotalForOrderer = this.getMealItemTotalByOrderer(orderer);\r\n      const fractionOfSubtotal = mealItemTotalForOrderer / this.getSubtotal();\r\n      const ordererShareOfTotal = shareEquallyTotalPerPerson + (fractionOfSubtotal * totalMinusShareEquallyValues);\r\n      const shareTotalObject = {\r\n        orderer,\r\n        shareOfTotal: `$${ordererShareOfTotal.toFixed(2)}`,\r\n      }\r\n      totals.push(shareTotalObject);\r\n    })\r\n    return totals;\r\n  }\r\n\r\n  render() {\r\n    const totalFloat = parseFloat(this.props.receipt.total);\r\n    const serviceFeeFloat = parseFloat(this.props.receipt.serviceFee);\r\n    const deliveryFeeFloat = parseFloat(this.props.receipt.deliveryFee);\r\n    const receiptValuesAreFloats = totalFloat && serviceFeeFloat && deliveryFeeFloat;\r\n    const hasOrderers = this.props.orderers.length;\r\n    const mealCostsAreFloats = this.props.receipt.mealItems.every((mealItem) => (\r\n      parseFloat(mealItem.cost)\r\n    ));\r\n\r\n    if (receiptValuesAreFloats && hasOrderers && mealCostsAreFloats) {\r\n      return (\r\n        <div style={{ paddingBottom: '30px' }}>\r\n          <Title>\r\n            Your splits\r\n          </Title>\r\n          <Table columns={columns} dataSource={this.getShareTotals()} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Title>\r\n          No splits to show\r\n        </Title>\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <span style={{ margin: 'auto', fontSize: '100px' }}>\r\n            <FrownOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport OrderersForm from './OrderersForm';\nimport ReceiptForm from './ReceiptForm';\nimport OutputTable from './OutputTable';\nimport { Layout } from 'antd';\nimport { CoffeeOutlined } from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      receipt: {\n        mealItems: [],\n        deliveryFee: '',\n        serviceFee: '',\n        total: '',\n      },\n      orderers: [],\n    };\n  }\n\n  addOrderer = (orderer) => {\n    const orderers = this.state.orderers;\n    orderers.push(orderer);\n    this.setState({ orderers });\n  }\n\n  deleteOrderer = (index) => {\n    const orderers = this.state.orderers;\n    const orderer = orderers[index];\n    orderers.splice(index, 1);\n    this.setState({ orderers });\n\n    // We need to delete all meal items that this person ordered\n    const mealItems = this.state.receipt.mealItems;\n    const mealItemIndices = []\n    mealItems.forEach((mealItem, index) => {\n      if (mealItem.orderer === orderer) {\n        mealItemIndices.push(index);\n      }\n    });\n\n    mealItemIndices.reverse().forEach((index) => {\n      mealItems.splice(index, 1);\n    });\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  updateTotal = (total) => {\n    const receipt = this.state.receipt;\n    receipt.total = total;\n    this.setState({ receipt });\n  }\n\n  updateDeliveryFee = (deliveryFee) => {\n    const receipt = this.state.receipt;\n    receipt.deliveryFee = deliveryFee;\n    this.setState({ receipt });  }\n\n  updateServiceFee = (serviceFee) => {\n    const receipt = this.state.receipt;\n    receipt.serviceFee = serviceFee;\n    this.setState({ receipt });  }\n\n  addMealItem = (mealItem) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.push(mealItem);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems\n    this.setState({ receipt });\n  }\n\n  deleteMealItem = (index) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.splice(index, 1);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Header className=\"white fs-30\">\n          <CoffeeOutlined spin={true} />\n          {'   '}\n          Fair Share\n        </Layout.Header>\n        <Layout>\n          <Layout.Content className=\"main-content\">\n            <OrderersForm\n              orderers={this.state.orderers}\n              addOrderer={this.addOrderer}\n              deleteOrderer={this.deleteOrderer}\n            />\n\n            <ReceiptForm\n              updateServiceFee={this.updateServiceFee}\n              updateDeliveryFee={this.updateDeliveryFee}\n              updateTotal={this.updateTotal}\n              addMealItem={this.addMealItem}\n              deleteMealItem={this.deleteMealItem}\n              orderers={this.state.orderers}\n              receipt={this.state.receipt}\n            />\n\n            <OutputTable\n              receipt={this.state.receipt}\n              orderers={this.state.orderers}\n            />\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}