{"version":3,"sources":["OrdererCard.jsx","OrderersForm.jsx","ReceiptForm.jsx","OutputTable.jsx","App.js","index.js"],"names":["OrdererCard","props","styles","backgroundColor","borderRadius","color","fontSize","padding","margin","display","alignItems","style","UserOutlined","marginRight","name","type","onClick","handleDelete","marginLeft","DeleteOutlined","Title","Typography","OrderersForm","orderers","map","orderer","index","deleteOrderer","useState","newOrderer","setNewOrderer","onAddOrdererClick","addOrderer","marginTop","level","size","placeholder","prefix","value","onChange","event","target","onKeyPress","key","suffix","PlusOutlined","className","Option","Select","ReceiptForm","state","cost","isModalVisible","handleMealCostUpdate","bind","handleMealNameUpdate","handleMealOrdererUpdate","addMealItem","deleteMealItem","title","dataIndex","render","text","record","this","setState","message","error","visible","okText","onOk","onCancel","direction","ShoppingCartOutlined","DollarOutlined","width","receipt","mealItems","length","dataSource","item","columns","getColumns","pagination","total","toString","e","updateTotal","deliveryFee","updateDeliveryFee","serviceFee","updateServiceFee","React","Component","OutputTable","reduce","mealItem","parseFloat","subtotal","shareEquallyTotalPerPerson","totalMinusShareEquallyValues","totals","forEach","fractionOfSubtotal","getMealItemTotalByOrderer","getSubtotal","ordererShareOfTotal","shareTotalObject","shareOfTotal","toFixed","push","totalFloat","serviceFeeFloat","deliveryFeeFloat","receiptValuesAreFloats","hasOrderers","hasMealItems","totalMakesSense","mealCostsAreFloats","every","paddingBottom","getShareTotals","FrownOutlined","App","getRandomOrdererColor","backgroundColors","Math","floor","random","doesOrdererExist","find","o","isOrdererBlank","splice","mealItemIndices","reverse","Header","CoffeeOutlined","spin","Content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af252038.chunk.js","sourcesContent":["import React from 'react';\r\nimport { DeleteOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\n\r\nexport default function OrdererCard(props) {\r\n  const styles = {\r\n    backgroundColor: props.backgroundColor,\r\n    borderRadius: '10px',\r\n    color: 'white',\r\n    fontSize: '25px',\r\n    padding: '5px 15px 5px 15px',\r\n    margin: '0 10px 10px 0',\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <span style={styles}>\r\n      <UserOutlined style={{ marginRight: '5px' }} />\r\n      {props.name}\r\n      <Button type=\"primary\" onClick={props.handleDelete} style={{ marginLeft: '20px' }}>\r\n        <DeleteOutlined />\r\n      </Button>\r\n    </span>\r\n  );\r\n}","import React,  {useState} from 'react';\r\nimport { Typography, Button, Input } from 'antd';\r\nimport { PlusOutlined, UserOutlined } from '@ant-design/icons';\r\nimport OrdererCard from './OrdererCard';\r\nimport './App.css';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function OrderersForm(props) {\r\n  const orderers = props.orderers.map((orderer, index) => {\r\n    return (\r\n      <OrdererCard\r\n        name={orderer.name}\r\n        backgroundColor={orderer.color}\r\n        handleDelete={() => { props.deleteOrderer(index) }}\r\n      />\r\n    );\r\n  });\r\n\r\n  const [newOrderer, setNewOrderer] = useState('');\r\n\r\n  const onAddOrdererClick = () => {\r\n    setNewOrderer('');\r\n    props.addOrderer(newOrderer);\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: '60px' }}>\r\n      <Title>Orderer Details</Title>\r\n      <Title level={2}>\r\n        Add Orderer\r\n      </Title>\r\n      <Input\r\n        size=\"large\"\r\n        placeholder=\"Orderer name\"\r\n        prefix={<UserOutlined />}\r\n        value={newOrderer}\r\n        onChange={(event) => { setNewOrderer(event.target.value) }}\r\n        onKeyPress={event => event.key === 'Enter' && onAddOrdererClick()}\r\n        suffix={\r\n          <Button type=\"primary\" onClick={onAddOrdererClick}>\r\n            <PlusOutlined />\r\n          </Button>\r\n        }\r\n        className=\"mb-15\"\r\n      />\r\n       {orderers}\r\n    </div>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport { Typography, Table, Button, Input, Select, Space, message, Modal } from 'antd';\r\nimport { ShoppingCartOutlined, DollarOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nexport default class ReceiptForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      cost: '',\r\n      orderer: 'changeme',\r\n      isModalVisible: false,\r\n    };\r\n\r\n    this.handleMealCostUpdate = this.handleMealCostUpdate.bind(this);\r\n    this.handleMealNameUpdate = this.handleMealNameUpdate.bind(this);\r\n    this.handleMealOrdererUpdate = this.handleMealOrdererUpdate.bind(this);\r\n    this.addMealItem = this.addMealItem.bind(this);\r\n    this.deleteMealItem = this.deleteMealItem.bind(this);\r\n  }\r\n\r\n  getColumns() {\r\n    const columns = [\r\n      {\r\n        title: 'Item',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Price',\r\n        dataIndex: 'cost',\r\n        key: 'cost',\r\n      },\r\n      {\r\n        title: 'Orderer',\r\n        dataIndex: 'orderer',\r\n        key: 'orderer',\r\n      },\r\n      {\r\n        title: 'Delete',\r\n        dataIndex: 'deleteFunction',\r\n        render: (text, record) => (\r\n            <Button type=\"primary\" onClick={() => { this.deleteMealItem(record.index) }}>\r\n              <DeleteOutlined />\r\n            </Button>\r\n          ),\r\n      },\r\n    ];\r\n    return columns;\r\n  }\r\n\r\n  handleMealNameUpdate(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleMealCostUpdate(event) {\r\n    this.setState({\r\n      cost: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleMealOrdererUpdate(orderer) {\r\n    this.setState({ orderer });\r\n  }\r\n\r\n  addMealItem() {\r\n    if (this.state.orderer !== 'changeme') {\r\n      this.setState({\r\n        name: '',\r\n        orderer: 'changeme',\r\n        cost: '',\r\n        isModalVisible: false,\r\n      });\r\n      this.props.addMealItem(this.state);\r\n    } else {\r\n      message.error('Change the orderer for this meal item.');\r\n    }\r\n  }\r\n\r\n  deleteMealItem(index) {\r\n    this.props.deleteMealItem(index);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: '30px' }}>\r\n        <Title>\r\n          Meal Details\r\n        </Title>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\" onClick={() => { this.setState({ isModalVisible: true }) }}\r\n          className=\"mb-15\"\r\n        >\r\n          Add Meal Items\r\n          <PlusOutlined />\r\n        </Button>\r\n\r\n        <Modal\r\n          title=\"Add Meal Item\"\r\n          visible={this.state.isModalVisible}\r\n          okText=\"Add Meal Item\"\r\n          onOk={this.addMealItem}\r\n          onCancel={() => { this.setState({ isModalVisible: false }) }}\r\n        >\r\n          <Space direction=\"vertical\"  className=\"w-100-percent\">\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={this.handleMealNameUpdate}\r\n              prefix={<ShoppingCartOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item name\"\r\n              className=\"w-100-percent\"\r\n            />\r\n            <Input\r\n              value={this.state.cost}\r\n              onChange={this.handleMealCostUpdate}\r\n              prefix={<DollarOutlined />}\r\n              size=\"large\"\r\n              placeholder=\"Meal item price\"\r\n              className=\"w-100-percent\"\r\n            />\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              size=\"large\"\r\n              value={this.state.orderer}\r\n              className=\"w-100-percent\"\r\n              onChange={this.handleMealOrdererUpdate}\r\n            >\r\n              <Option value=\"changeme\">Orderer</Option>\r\n              {\r\n                this.props.orderers.map((orderer, index) => (\r\n                  <Option value={orderer.name}>{orderer.name}</Option>\r\n                ))\r\n              }\r\n            </Select>\r\n          </Space>\r\n        </Modal>\r\n\r\n        {\r\n          !!this.props.receipt.mealItems.length && (\r\n            <Table\r\n              key={this.props.receipt.mealItems}\r\n              dataSource={this.props.receipt.mealItems.map((item, index) => {\r\n                item.index = index;\r\n                return item;\r\n              })}\r\n              columns={this.getColumns()}\r\n              pagination={false}\r\n              className=\"mb-15\"\r\n            />\r\n          )\r\n        }\r\n\r\n        <Title level={2}>\r\n          Total\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.total.toString()}\r\n          onChange={(e) => { this.props.updateTotal(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={2}>\r\n          Delivery Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.deliveryFee.toString()}\r\n          onChange={(e) => { this.props.updateDeliveryFee(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n\r\n        <Title level={2}>\r\n          Service Fee\r\n        </Title>\r\n        <Input\r\n          value={this.props.receipt.serviceFee.toString()}\r\n          onChange={(e) => { this.props.updateServiceFee(e.target.value) }}\r\n          size=\"large\"\r\n          prefix={<DollarOutlined />}\r\n          className=\"mb-15 max-w-300\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Typography, Table } from 'antd';\r\nimport { FrownOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Orderer',\r\n    dataIndex: 'orderer',\r\n    key: 'orderer',\r\n  },\r\n  {\r\n    title: 'Share of Total',\r\n    dataIndex: 'shareOfTotal',\r\n    key: 'shareOfTotal',\r\n  },\r\n];\r\n\r\nexport default class OutputTable extends React.Component {\r\n  getMealItemTotalByOrderer(orderer) {\r\n\r\n    const itemTotal = this.props.receipt.mealItems.reduce((total, mealItem) => (\r\n      mealItem.orderer === orderer ? total + parseFloat(mealItem.cost) : total\r\n    ), 0);\r\n    return itemTotal;\r\n  }\r\n\r\n  getSubtotal() {\r\n    return this.props.receipt.mealItems.reduce((subtotal, mealItem) => (\r\n      subtotal + parseFloat(mealItem.cost)\r\n    ), 0);\r\n  }\r\n\r\n  getShareTotals() {\r\n    const shareEquallyTotalPerPerson = (parseFloat(this.props.receipt.deliveryFee)\r\n      + parseFloat(this.props.receipt.serviceFee)) / this.props.orderers.length;\r\n\r\n    const totalMinusShareEquallyValues = parseFloat(this.props.receipt.total) - (\r\n      parseFloat(this.props.receipt.deliveryFee) + parseFloat(this.props.receipt.serviceFee)\r\n    );\r\n\r\n    const totals = [];\r\n    this.props.orderers.forEach((orderer) => {\r\n      const mealItemTotalForOrderer = this.getMealItemTotalByOrderer(orderer.name);\r\n      const fractionOfSubtotal = mealItemTotalForOrderer / this.getSubtotal();\r\n      const ordererShareOfTotal = shareEquallyTotalPerPerson + (fractionOfSubtotal * totalMinusShareEquallyValues);\r\n      const shareTotalObject = {\r\n        orderer: orderer.name,\r\n        shareOfTotal: `$${ordererShareOfTotal.toFixed(2)}`,\r\n      }\r\n      totals.push(shareTotalObject);\r\n    })\r\n    return totals;\r\n  }\r\n\r\n  render() {\r\n    const totalFloat = parseFloat(this.props.receipt.total);\r\n    const serviceFeeFloat = parseFloat(this.props.receipt.serviceFee);\r\n    const deliveryFeeFloat = parseFloat(this.props.receipt.deliveryFee);\r\n    const receiptValuesAreFloats = totalFloat && serviceFeeFloat && deliveryFeeFloat;\r\n    const hasOrderers = this.props.orderers.length;\r\n    const hasMealItems = this.props.receipt.mealItems.length;\r\n    const totalMakesSense = totalFloat >= (this.getSubtotal() + serviceFeeFloat + deliveryFeeFloat);\r\n    const mealCostsAreFloats = this.props.receipt.mealItems.every((mealItem) => (\r\n      parseFloat(mealItem.cost)\r\n    ));\r\n\r\n    if (receiptValuesAreFloats && hasOrderers && mealCostsAreFloats && hasMealItems && totalMakesSense) {\r\n      return (\r\n        <div style={{ paddingBottom: '30px' }}>\r\n          <Title>\r\n            Your splits\r\n          </Title>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={this.getShareTotals()}\r\n            pagination={false}\r\n            className=\"mb-15\"\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Title>\r\n          No splits to show\r\n        </Title>\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <span style={{ margin: 'auto', fontSize: '100px' }}>\r\n            <FrownOutlined />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport OrderersForm from './OrderersForm';\nimport ReceiptForm from './ReceiptForm';\nimport OutputTable from './OutputTable';\nimport { Layout, message } from 'antd';\nimport { CoffeeOutlined } from '@ant-design/icons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      receipt: {\n        mealItems: [],\n        deliveryFee: '',\n        serviceFee: '',\n        total: '',\n      },\n      orderers: [],\n    };\n  }\n\n  getRandomOrdererColor = () => {\n    const backgroundColors = ['#ff8519', '#07d907', '#c904db', '#fa0c34', '#0cfae2', '#ff1979'];\n    return backgroundColors[Math.floor(Math.random() * backgroundColors.length)]\n  }\n\n  addOrderer = (orderer) => {\n    const doesOrdererExist = !!this.state.orderers.find(o => o.name === orderer);\n    const isOrdererBlank = orderer === '';\n\n    if (doesOrdererExist) {\n      message.error('Orderers must be unique.');\n    } else if (isOrdererBlank) {\n      message.error('Orderer is required.');\n    } else {\n      const orderers = this.state.orderers;\n      orderers.push({\n        name: orderer,\n        color: this.getRandomOrdererColor(),\n      });\n      this.setState({ orderers });\n    }\n  }\n\n  deleteOrderer = (index) => {\n    const orderers = this.state.orderers;\n    const orderer = orderers[index];\n    orderers.splice(index, 1);\n    this.setState({ orderers });\n\n    // We need to delete all meal items that this person ordered\n    const mealItems = this.state.receipt.mealItems;\n    const mealItemIndices = []\n    mealItems.forEach((mealItem, index) => {\n      if (mealItem.orderer === orderer.name) {\n        mealItemIndices.push(index);\n      }\n    });\n\n    mealItemIndices.reverse().forEach((index) => {\n      mealItems.splice(index, 1);\n    });\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  updateTotal = (total) => {\n    const receipt = this.state.receipt;\n    receipt.total = total;\n    this.setState({ receipt });\n  }\n\n  updateDeliveryFee = (deliveryFee) => {\n    const receipt = this.state.receipt;\n    receipt.deliveryFee = deliveryFee;\n    this.setState({ receipt });  }\n\n  updateServiceFee = (serviceFee) => {\n    const receipt = this.state.receipt;\n    receipt.serviceFee = serviceFee;\n    this.setState({ receipt });  }\n\n  addMealItem = (mealItem) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.push(mealItem);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems\n    this.setState({ receipt });\n  }\n\n  deleteMealItem = (index) => {\n    const mealItems = this.state.receipt.mealItems;\n    mealItems.splice(index, 1);\n\n    const receipt = this.state.receipt;\n    receipt.mealItems = mealItems;\n    this.setState({ receipt });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Header className=\"white fs-30\">\n          <CoffeeOutlined spin={true} />\n          {'   '}\n          Uber Eats Bill Splitter\n        </Layout.Header>\n        <Layout>\n          <Layout.Content className=\"main-content\">\n            <OrderersForm\n              orderers={this.state.orderers}\n              addOrderer={this.addOrderer}\n              deleteOrderer={this.deleteOrderer}\n            />\n\n            <ReceiptForm\n              updateServiceFee={this.updateServiceFee}\n              updateDeliveryFee={this.updateDeliveryFee}\n              updateTotal={this.updateTotal}\n              addMealItem={this.addMealItem}\n              deleteMealItem={this.deleteMealItem}\n              orderers={this.state.orderers}\n              receipt={this.state.receipt}\n            />\n\n            <OutputTable\n              receipt={this.state.receipt}\n              orderers={this.state.orderers}\n            />\n          </Layout.Content>\n        </Layout>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}